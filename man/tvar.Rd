% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_samplers.R
\name{tvar}
\alias{tvar}
\title{MCMC Sampler for Time-Varying Autoregression}
\usage{
tvar(
  y,
  p_max = 1,
  include_intercept = FALSE,
  evol_error = "DHS",
  D = 2,
  useObsSV = FALSE,
  nsave = 1000,
  nburn = 1000,
  nskip = 4,
  mcmc_params = list("mu", "yhat", "beta", "evol_sigma_t2", "obs_sigma_t2", "dhs_phi",
    "dhs_mean"),
  computeDIC = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{y}{the \code{T x 1} vector of time series observations}

\item{p_max}{the maximum order of lag to include}

\item{include_intercept}{logical; if TRUE, include a time-varying intercept}

\item{evol_error}{the evolution error distribution; must be one of
'DHS' (dynamic horseshoe prior), 'HS' (horseshoe prior), 'BL' (Bayesian lasso), or 'NIG' (normal-inverse-gamma prior)}

\item{D}{degree of differencing (D = 1 or D = 2)}

\item{useObsSV}{logical; if TRUE, include a (normal) stochastic volatility model
for the observation error variance}

\item{nsave}{number of MCMC iterations to record}

\item{nburn}{number of MCMC iterations to discard (burin-in)}

\item{nskip}{number of MCMC iterations to skip between saving iterations,
i.e., save every (nskip + 1)th draw}

\item{mcmc_params}{named list of parameters for which we store the MCMC output;
must be one or more of:
\itemize{
\item "mu" (conditional mean)
\item "yhat" (posterior predictive distribution)
\item "beta" (dynamic regression coefficients)
\item "evol_sigma_t2" (evolution error variance)
\item "obs_sigma_t2" (observation error variance)
\item "dhs_phi" (DHS AR(1) coefficient)
\item "dhs_mean" (DHS AR(1) unconditional mean)
}}

\item{computeDIC}{logical; if TRUE, compute the deviance information criterion \code{DIC}
and the effective number of parameters \code{p_d}}

\item{verbose}{logical; should R report extra information on progress?}
}
\value{
A named list of the \code{nsave} MCMC samples for the parameters named in \code{mcmc_params}
}
\description{
Run the MCMC for a time-varying autoregression with a penalty on
first (D=1) or second (D=2) differences of each dynamic autoregressive coefficient.
The penalty is determined by the prior on the evolution errors, which include:
\itemize{
\item the dynamic horseshoe prior ('DHS');
\item the static horseshoe prior ('HS');
\item the Bayesian lasso ('BL');
\item the normal stochastic volatility model ('SV');
\item the normal-inverse-gamma prior ('NIG').
}
In each case, the evolution error is a scale mixture of Gaussians.
Sampling is accomplished with a (parameter-expanded) Gibbs sampler,
mostly relying on a dynamic linear model representation.
}
\note{
The data \code{y} may NOT contain NAs. The data \code{y} will be used to construct
the predictor matrix (of lagged values), which is not permitted to include NAs.
}
\examples{
\dontrun{
# Example 1:
simdata = simUnivariate(signalName = "doppler", T = 128, RSNR = 7, include_plot = TRUE)
y = simdata$y

# Note: in general should subtract off the sample mean
p = 6 # Lag
out = tvar(y, p_max = p, include_intercept = FALSE,
                   evol_error = 'DHS', D = 1,
                   mcmc_params = list('mu', 'yhat', 'beta', 'obs_sigma_t2'))

for(j in 1:p)
  plot_fitted(rep(0, length(y) - p),
           mu = colMeans(out$beta[,,j]),
           postY = out$beta[,,j])

plot_fitted(y[-(1:p)],
           mu = colMeans(out$mu),
           postY = out$yhat,
           y_true = simdata$y_true[-(1:p)])

spec_TF = post_spec_dsp(post_ar_coefs = out$beta,
                   post_sigma_e = sqrt(out$obs_sigma_t2[,1]),
                   n.freq = 100)

image(x = 1:(length(y)-p), y = spec_TF$freq, colMeans(log(spec_TF$post_spec)),
     xlab = 'Time', ylab = 'Freqency', main = 'Posterior Mean of Log-Spectrum')
}

}
